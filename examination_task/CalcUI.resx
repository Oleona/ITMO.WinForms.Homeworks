<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cuberoot.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>